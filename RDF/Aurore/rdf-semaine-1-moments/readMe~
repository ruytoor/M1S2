binome : Benjamin Ruytoor et Aurore Allart
date : 20 janvier 2013
TP RdF: TP1 : extraction d'attribut de forme

------------------------------
rectangle horizontal : 
------------------------------
// Calcul de la surface
 surface  =    64.  

-->// Calcul de la matrice d'inertie
 inertie  =    1360.    0.   
  		  0.       80.  

-->// Determine les valeurs propres
 val  =    80.    0.     
   	    0.     1360.  
-->// Determine l'axe principal d'inertie
 vect  =    0.    1.  
            1.    0.  
-->// Calcul des moments principaux d'inertie
 valModifie  =    80.    0.     
   		   0.     1360.  
-->// Calcul des moments normalises
 InertieMomentOrdreDeux  =    20.923077    0.         
   			       0.           1.2307692  

-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
val2  = 1.2307692    0.         
    	0.           20.923077  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
 vect2  =    0.    1.  
    	     1.    0.  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
 valModifie2  =    1.2307692    0.         
    		   0.           20.923077  
-->// Calcul des moments invariants
 invariant  =    22.153846    387.78698    0.    0.    0.  

----------------------------
rectangle vertical
----------------------------

// Calcul de la surface
 surface  =    64.  

// Calcul de la matrice d'inertie
 inertie  =    80.    0.     
    		0.     1360.  

// Determine les valeurs propres
 val  =    80.    0.     
    	    0.     1360.  
-->// Determine l'axe principal d'inertie
 vect  =    1.    0.  
    	    0.    1.  
-->// Calcul des moments principaux d'inertie
 valModifie  =    80.    0.     
          	   0.     1360.  
-->// Calcul des moments normalises
 InertieMomentOrdreDeux  =    1.2307692    0.         
    			      0.           20.923077  
-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
 val2  =    1.2307692    0.         
    	    0.           20.923077  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
 vect2  =    1.    0.  
    	     0.    1.  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
 valModifie2  =    1.2307692    0.         
    		   0.           20.923077  
-->// Calcul des moments invariants
 invariant  =    22.153846    387.78698    0.    0.    0.  

--------------------------
rectangle diagonale
--------------------------
// Calcul de la surface
-->surface = rdfSurface (image)
 surface  =
 
    58.  
-->// Calcul de la matrice d'inertie
-->inertie = [rdfMomentCentre(image,2,0) rdfMomentCentre(image,1,1); rdfMomentCentre(image,1,1) rdfMomentCentre(image,0,2)]
 inertie  =
 
    678.5  - 619.5  
  - 619.5    678.5  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie
-->[vect,val] = spec(inertie);
-->// Determine les valeurs propres
-->val
 val  =
 
    59.    0.     
    0.     1298.  
-->// Determine l'axe principal d'inertie
-->vect
 vect  =
 
  - 0.7071068  - 0.7071068  
  - 0.7071068    0.7071068  
-->// Calcul des moments principaux d'inertie
-->valModifie = inv(vect)*inertie*vect
 valModifie  =
 
    59.    0.     
    0.     1298.  
-->// Calcul des moments normalises
-->InertieMomentOrdreDeux = [rdfMomentCentreNormalise(image,2,0) rdfMomentCentreNormalise(image,1,1); rdfMomentCentreNormalise(image,1,1) rdfMomentCentreNormalise(image,0,2)]
 InertieMomentOrdreDeux  =
 
    11.5  - 10.5  
  - 10.5    11.5  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie calculee a partir des moments centres normalises
-->[vect2,val2] = spec(InertieMomentOrdreDeux);
-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
-->val2
 val2  =
 
    1.    0.   
    0.    22.  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
-->vect2
 vect2  =
 
  - 0.7071068  - 0.7071068  
  - 0.7071068    0.7071068  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
-->valModifie2 = inv(vect2)*InertieMomentOrdreDeux*vect2
 valModifie2  =
 
    1.    0.   
    0.    22.  
-->// Calcul des moments invariants
-->invariant = rdfMomentsInvariants(image)
 invariant  =
    23.    441.    0.    0.    0.  

------------------------------
rectangle diagonale lisse
------------------------------
// Calcul de la surface
-->surface = rdfSurface (image)
 surface  =
 
    64.498039  
-->// Calcul de la matrice d'inertie
-->inertie = [rdfMomentCentre(image,2,0) rdfMomentCentre(image,1,1); rdfMomentCentre(image,1,1) rdfMomentCentre(image,0,2)]
 inertie  =
 
    745.00804  - 647.0326   
  - 647.0326     748.40768  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie
-->[vect,val] = spec(inertie);
-->// Determine les valeurs propres
-->val
 val  =
 
    99.673034    0.         
    0.           1393.7427  
-->// Determine l'axe principal d'inertie
-->vect
 vect  =
 
  - 0.7080350  - 0.7061774  
  - 0.7061774    0.7080350  
-->// Calcul des moments principaux d'inertie
-->valModifie = inv(vect)*inertie*vect
 valModifie  =
 
    99.673034    1.705D-13  
    1.137D-13    1393.7427  
-->// Calcul des moments normalises
-->InertieMomentOrdreDeux = [rdfMomentCentreNormalise(image,2,0) rdfMomentCentreNormalise(image,1,1); rdfMomentCentreNormalise(image,1,1) rdfMomentCentreNormalise(image,0,2)]
 InertieMomentOrdreDeux  =
 
    11.374509  - 9.878656   
  - 9.878656     11.426414  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie calculee a partir des moments centres normalises
-->[vect2,val2] = spec(InertieMomentOrdreDeux);
-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
-->val2
 val2  =
 
    1.5217713    0.         
    0.           21.279151  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
-->vect2
 vect2  =
 
  - 0.7080350  - 0.7061774  
  - 0.7061774    0.7080350  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
-->valModifie2 = inv(vect2)*InertieMomentOrdreDeux*vect2
 valModifie2  =
 
    1.5217713    0.         
    1.776D-15    21.279151  
-->// Calcul des moments invariants
-->invariant = rdfMomentsInvariants(image)
 invariant  =
 
    22.800923    390.35407    0.5716197    0.4592226    0.7790193 

---------------------------
carre de 6 cm de coté
---------------------------

// Calcul de la surface
-->surface = rdfSurface (image)
 surface  =
 
    36.  
-->// Calcul de la matrice d'inertie
-->inertie = [rdfMomentCentre(image,2,0) rdfMomentCentre(image,1,1); rdfMomentCentre(image,1,1) rdfMomentCentre(image,0,2)]
 inertie  =
 
    105.    0.    
    0.      105.  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie
-->[vect,val] = spec(inertie);
-->// Determine les valeurs propres
-->val
 val  =
 
    105.    0.    
    0.      105.  
-->// Determine l'axe principal d'inertie
-->vect
 vect  =
 
    1.    0.  
    0.    1.  
-->// Calcul des moments principaux d'inertie
-->valModifie = inv(vect)*inertie*vect
 valModifie  =
 
    105.    0.    
    0.      105.  
-->// Calcul des moments normalises
-->InertieMomentOrdreDeux = [rdfMomentCentreNormalise(image,2,0) rdfMomentCentreNormalise(image,1,1); rdfMomentCentreNormalise(image,1,1) rdfMomentCentreNormalise(image,0,2)]
 InertieMomentOrdreDeux  =
 
    2.8378378    0.         
    0.           2.8378378  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie calculee a partir des moments centres normalises
-->[vect2,val2] = spec(InertieMomentOrdreDeux);
-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
-->val2
 val2  =
 
    2.8378378    0.         
    0.           2.8378378  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
-->vect2
 vect2  =
 
    1.    0.  
    0.    1.  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
-->valModifie2 = inv(vect2)*InertieMomentOrdreDeux*vect2
 valModifie2  =
 
    2.8378378    0.         
    0.           2.8378378  
-->// Calcul des moments invariants
-->invariant = rdfMomentsInvariants(image)
 invariant  =
 
    5.6756757    0.    0.    0.    0. 

------------------------------
carre de 10 cm de coté
------------------------------

// Calcul de la surface
-->surface = rdfSurface (image)
 surface  =
 
    100.  
-->// Calcul de la matrice d'inertie
-->inertie = [rdfMomentCentre(image,2,0) rdfMomentCentre(image,1,1); rdfMomentCentre(image,1,1) rdfMomentCentre(image,0,2)]
 inertie  =
 
    825.    0.    
    0.      825.  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie
-->[vect,val] = spec(inertie);
-->// Determine les valeurs propres
-->val
 val  =
 
    825.    0.    
    0.      825.  
-->// Determine l'axe principal d'inertie
-->vect
 vect  =
 
    1.    0.  
    0.    1.  
-->// Calcul des moments principaux d'inertie
-->valModifie = inv(vect)*inertie*vect
 valModifie  =
 
    825.    0.    
    0.      825.  
-->// Calcul des moments normalises
-->InertieMomentOrdreDeux = [rdfMomentCentreNormalise(image,2,0) rdfMomentCentreNormalise(image,1,1); rdfMomentCentreNormalise(image,1,1) rdfMomentCentreNormalise(image,0,2)]
 InertieMomentOrdreDeux  =
 
    8.1683168    0.         
    0.           8.1683168  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie calculee a partir des moments centres normalises
-->[vect2,val2] = spec(InertieMomentOrdreDeux);
-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
-->val2
 val2  =
 
    8.1683168    0.         
    0.           8.1683168  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
-->vect2
 vect2  =
 
    1.    0.  
    0.    1.  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
-->valModifie2 = inv(vect2)*InertieMomentOrdreDeux*vect2
 valModifie2  =
 
    8.1683168    0.         
    0.           8.1683168  
-->// Calcul des moments invariants
-->invariant = rdfMomentsInvariants(image)
 invariant  =
 
    16.336634    0.    0.    0.    0. 

-------------------------
carre de 10 cm de coté et d'angle 30°
-------------------------

// Calcul de la surface
-->surface = rdfSurface (image)
 surface  =
 
    100.12941  
-->// Calcul de la matrice d'inertie
-->inertie = [rdfMomentCentre(image,2,0) rdfMomentCentre(image,1,1); rdfMomentCentre(image,1,1) rdfMomentCentre(image,0,2)]
 inertie  =
 
    842.49652    0.2446836  
    0.2446836    843.20521  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie
-->[vect,val] = spec(inertie);
-->// Determine les valeurs propres
-->val
 val  =
 
    842.42024    0.         
    0.           843.28148  
-->// Determine l'axe principal d'inertie
-->vect
 vect  =
 
  - 0.9546936    0.2975906  
    0.2975906    0.9546936  
-->// Calcul des moments principaux d'inertie
-->valModifie = inv(vect)*inertie*vect
 valModifie  =
 
    842.42024    0.         
    2.842D-14    843.28148  
-->// Calcul des moments normalises
-->InertieMomentOrdreDeux = [rdfMomentCentreNormalise(image,2,0) rdfMomentCentreNormalise(image,1,1); rdfMomentCentreNormalise(image,1,1) rdfMomentCentreNormalise(image,0,2)]
 InertieMomentOrdreDeux  =
 
    8.3308753    0.0024195  
    0.0024195    8.3378831  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie calculee a partir des moments centres normalises
-->[vect2,val2] = spec(InertieMomentOrdreDeux);
-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
-->val2
 val2  =
 
    8.3301211    0.         
    0.           8.3386372  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
-->vect2
 vect2  =
 
  - 0.9546936    0.2975906  
    0.2975906    0.9546936  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
-->valModifie2 = inv(vect2)*InertieMomentOrdreDeux*vect2
 valModifie2  =
 
    8.3301211    4.441D-16  
    0.           8.3386372  
-->// Calcul des moments invariants
-->invariant = rdfMomentsInvariants(image)
 invariant  =
 
    16.668758    0.0000725    0.0267883    0.0007796  - 0.0337746 

-----------------------------
carre de 10 cm de coté avec 45°
-----------------------------

// Calcul de la surface
-->surface = rdfSurface (image)
 surface  =
 
    99.247059  
-->// Calcul de la matrice d'inertie
-->inertie = [rdfMomentCentre(image,2,0) rdfMomentCentre(image,1,1); rdfMomentCentre(image,1,1) rdfMomentCentre(image,0,2)]
 inertie  =
 
    840.33626    1.4580649  
    1.4580649    839.71679  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie
-->[vect,val] = spec(inertie);
-->// Determine les valeurs propres
-->val
 val  =
 
    838.53593    0.         
    0.           841.51713  
-->// Determine l'axe principal d'inertie
-->vect
 vect  =
 
    0.6293678  - 0.7771076  
  - 0.7771076  - 0.6293678  
-->// Calcul des moments principaux d'inertie
-->valModifie = inv(vect)*inertie*vect
 valModifie  =
 
    838.53593  - 5.684D-14  
    0.           841.51713  
-->// Calcul des moments normalises
-->InertieMomentOrdreDeux = [rdfMomentCentreNormalise(image,2,0) rdfMomentCentreNormalise(image,1,1); rdfMomentCentreNormalise(image,1,1) rdfMomentCentreNormalise(image,0,2)]
 InertieMomentOrdreDeux  =
 
    8.3826525    0.0145447  
    0.0145447    8.3764731  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie calculee a partir des moments centres normalises
-->[vect2,val2] = spec(InertieMomentOrdreDeux);
-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
-->val2
 val2  =
 
    8.3646936    0.         
    0.           8.3944321  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
-->vect2
 vect2  =
 
    0.6293678  - 0.7771076  
  - 0.7771076  - 0.6293678  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
-->valModifie2 = inv(vect2)*InertieMomentOrdreDeux*vect2
 valModifie2  =
 
    8.3646936    0.         
  - 8.882D-16    8.3944321  
-->// Calcul des moments invariants
-->invariant = rdfMomentsInvariants(image)
 invariant  =
 
    16.759126    0.0008844    0.0268398    0.0041003  - 0.0188184  

---------------------------------
carre de 20 cm de coté
---------------------------------

/ Calcul de la surface
-->surface = rdfSurface (image)
 surface  =
 
    400.  
-->// Calcul de la matrice d'inertie
-->inertie = [rdfMomentCentre(image,2,0) rdfMomentCentre(image,1,1); rdfMomentCentre(image,1,1) rdfMomentCentre(image,0,2)]
 inertie  =
 
    13300.    0.      
    0.        13300.  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie
-->[vect,val] = spec(inertie);
-->// Determine les valeurs propres
-->val
 val  =
 
    13300.    0.      
    0.        13300.  
-->// Determine l'axe principal d'inertie
-->vect
 vect  =
 
    1.    0.  
    0.    1.  
-->// Calcul des moments principaux d'inertie
-->valModifie = inv(vect)*inertie*vect
 valModifie  =
 
    13300.    0.      
    0.        13300.  
-->// Calcul des moments normalises
-->InertieMomentOrdreDeux = [rdfMomentCentreNormalise(image,2,0) rdfMomentCentreNormalise(image,1,1); rdfMomentCentreNormalise(image,1,1) rdfMomentCentreNormalise(image,0,2)]
 InertieMomentOrdreDeux  =
 
    33.167082    0.         
    0.           33.167082  
-->// Calcul des valeurs propres et vecteurs propres de la matrice d'inertie calculee a partir des moments centres normalises
-->[vect2,val2] = spec(InertieMomentOrdreDeux);
-->//Determine les valeurs propres à partir d'inertie du moment d'ordre 2
-->val2
 val2  =
 
    33.167082    0.         
    0.           33.167082  
-->//Determine les vecteurs propres à partir d'inertie du moment d'ordre 2
-->vect2
 vect2  =
 
    1.    0.  
    0.    1.  
-->// Calcul des moments principaux d'inertie du moment d'ordre 2
-->valModifie2 = inv(vect2)*InertieMomentOrdreDeux*vect2
 valModifie2  =
 
    33.167082    0.         
    0.           33.167082  
-->// Calcul des moments invariants
-->invariant = rdfMomentsInvariants(image)
 invariant  =
 
    66.334165    0.    0.    0.    0.  
