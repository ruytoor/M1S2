// -----------------------------------------------------------------------
// Extraction d'attributs de forme,
// Module RdF, reconnaissance de formes
// Copyright (C) 2010  Universite Lille 1
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.
// -----------------------------------------------------------------------
clear;
// Chargement des fonctions externes
exec ("rdfContours.sci", -1);

// Chargement d'un contour
//nom = "carre-80.txt";
//cont = rdfChargeFichierContour (nom);

//               cont tableau de nombre imagianire r+i

//nom2 = "cercle-80.txt";
//cont2 = rdfChargeFichierContour (nom2);
//b=size(cont2);
//cont2bis=cont2(1:4:b(1));
//cont2prim=cont2(1:8:b(1));
rectangle = imread("rdf-rectangle-horizontal.png");
contRect = rdfContour(rectangle);
carre = imread("rdf-carre-20.png");
contCarre = rdfContour(carre);
triangle = imread("rdf-triangle-20.png");
contTriangle = rdfContour(triangle);
croix = imread("rdf-croix.png");
contCroix = rdfContour(croix);
patate = imread("rdf-patate.png");
contPatate = rdfContour(patate);

//affichage contour
//rdfAfficheContour (contRect, 1, "k");
rdfAfficheContour (contCarre, 2, "k");
rdfAfficheContour (contTriangle, 3, "k");
rdfAfficheContour (contCroix, 4, "k");
rdfAfficheContour (contPatate, 5, "k");

//affichage algo corde
contRectCorde = rdfAlgorithmeCorde(contRect,0.5);
inter1 = rdfDescFourier(contRectCorde);
inter1(1) = 1+1*%i;
inter2 = rdf
rdfAfficheContour (contRectCorde,1,"b");

contCarreCorde = rdfAlgorithmeCorde(contCarre,1);
rdfAfficheContour (contCarreCorde,2,"b");

contTriangleCorde = rdfAlgorithmeCorde(contTriangle,1);
rdfAfficheContour (contTriangleCorde,3,"b");

contCroixCorde = rdfAlgorithmeCorde(contCroix,1);
rdfAfficheContour (contCroixCorde,4,"b");

contPatateCorde = rdfAlgorithmeCorde(contPatate,1);
rdfAfficheContour (contPatateCorde,5,"b");
//
//affichage avec les descripteurs de Fourier
//rectangle
contRectFourier=rdfDescFourier(contRect);
contRectAnnule = rdfAnnuleDescFourier(contRectFourier, 1);
contTriangleAnnule(1) = 1+1%i;
contRectRetour=rdfInverseDescFourier(contRectAnnule);
rdfAfficheContour (contRectRetour, 1, "r");
//triangle
contTriangleFourier=rdfDescFourier(contTriangle);
contTriangleAnnule = rdfAnnuleDescFourier(contTriangleFourier, 1);
contTriangleAnnule(1) = 1+1%i;
contTriangleRetour=rdfInverseDescFourier(contTriangleAnnule);
rdfAfficheContour (contTriangleRetour, 3, "r");
//carre
contCarreFourier=rdfDescFourier(contCarre);
contCarreAnnule = rdfAnnuleDescFourier(contCarreFourier, 1);
contCarreAnnule(1) = 1+1%i;
contCarreRetour=rdfInverseDescFourier(contCarreAnnule);
rdfAfficheContour (contCarreRetour, 2, "r");
//croix
contCroixFourier=rdfDescFourier(contCroix);
contCroixAnnule = rdfAnnuleDescFourier(contCroixFourier, 0.1);

contCroixRetour=rdfInverseDescFourier(contCroixAnnule);
rdfAfficheContour (contCroixRetour, 4, "r");
//patate
contPatateFourier=rdfDescFourier(contPatate);
contPatateAnnule = rdfAnnuleDescFourier(contPatateFourier, 0.7);
contPatateRetour=rdfInverseDescFourier(contPatateAnnule);
rdfAfficheContour (contPatateRetour, 5, "r");



// Afficher, fenetre 1, contour en noir "k"
//rdfAfficheContour (cont, 1, "k");
//rdfAfficheContour (cont2, 2, "r");
//rdfAfficheContour (cont2bis, 2, "b");
//rdfAfficheContour (cont2prim, 2, "g");

//desc=rdfDescFourier(cont);
//rdfAfficheContour (desc,1,"b");
//annule = rdfAnnuleDescFourier(desc, 0.5);
//rdfAfficheContour (annule,1,"g");
//bary = rdfValeurDescFourier(desc,0);
//bary2 = 2 -2*%i;
//desc(1) = bary2;
//contLeRetour=rdfInverseDescFourier(annule);
//rdfAfficheContour (contLeRetour, 1, "r");
//contInter = cont2;
//corde = rdfAlgorithmeCorde(contInter, 0.5);
//rdfAfficheContour(corde,2,"b");
//corde2 = rdfAlgorithmeCorde(contInter,1);
//rdfAfficheContour(corde2,2,"g");
//

